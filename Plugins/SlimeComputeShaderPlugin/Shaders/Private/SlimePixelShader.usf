#pragma once

#include "/Engine/Public/Platform.ush"
#include "SlimeStructs.ush"

// VERTEX SHADER
////////////////

void SlimeVertexShader(float4 InPosition : ATTRIBUTE0, float2 InUV : ATTRIBUTE1, out float2 OutUV : TEXCOORD0, out float4 OutPosition : SV_POSITION)
{
	OutPosition = InPosition;
	OutUV = InUV;
}

// PIXEL SHADER
///////////////

StructuredBuffer<SpeciesSettings> SpeciesSettingsBuffer;
int NumSpecies;
float2 TextureSize;
Texture2D<float4> TrailMap;

void SlimePixelShader(in float2 uv : TEXCOORD0, out float4 OutColor : SV_Target0)
{
    float4 map = TrailMap[uint2(TextureSize.x * uv.x, TextureSize.y * uv.y)];
	
    float4 color = 0;
    for (int i = 0; i < NumSpecies; i++)
    {
        float4 mask = float4(i == 0, i == 1, i == 2, i == 3);
        color += SpeciesSettingsBuffer[i].Color * dot(map, mask);
    }
    color.a = 1;

	OutColor = color;
}
